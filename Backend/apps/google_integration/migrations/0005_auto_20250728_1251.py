# Generated by Django 4.2.23 on 2025-07-28 07:21

from django.db import migrations, models


def fix_refresh_token_constraint(apps, schema_editor):
    """
    Fix the refresh_token_encrypted constraint by updating existing records
    and modifying the database constraint
    """
    db_alias = schema_editor.connection.alias
    
    # Update any existing records with NULL refresh_token_encrypted to empty string
    with schema_editor.connection.cursor() as cursor:
        cursor.execute("""
            UPDATE google_integrations 
            SET refresh_token_encrypted = '' 
            WHERE refresh_token_encrypted IS NULL
        """)
        
        # Drop the NOT NULL constraint if it exists
        cursor.execute("""
            ALTER TABLE google_integrations 
            ALTER COLUMN refresh_token_encrypted DROP NOT NULL
        """)


def reverse_fix_refresh_token_constraint(apps, schema_editor):
    """
    Reverse the constraint fix (add NOT NULL back)
    """
    with schema_editor.connection.cursor() as cursor:
        # Add the NOT NULL constraint back
        cursor.execute("""
            UPDATE google_integrations 
            SET refresh_token_encrypted = '' 
            WHERE refresh_token_encrypted IS NULL
        """)
        
        cursor.execute("""
            ALTER TABLE google_integrations 
            ALTER COLUMN refresh_token_encrypted SET NOT NULL
        """)


class Migration(migrations.Migration):

    dependencies = [
        ('google_integration', '0004_auto_20250728_1243'),
    ]

    operations = [
        migrations.RunPython(
            fix_refresh_token_constraint,
            reverse_fix_refresh_token_constraint,
        ),
    ]
